{
  "data": {
    "edges": [
      {
        "animated": false,
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "ContentInput",
            "id": "ContentInput-ez3tg",
            "name": "text",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "content",
            "id": "OnlyofficeDocspaceUploadFile-qpWMI",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "xy-edge__ContentInput-ez3tg{œdataTypeœ:œContentInputœ,œidœ:œContentInput-ez3tgœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-OnlyofficeDocspaceUploadFile-qpWMI{œfieldNameœ:œcontentœ,œidœ:œOnlyofficeDocspaceUploadFile-qpWMIœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "selected": false,
        "source": "ContentInput-ez3tg",
        "sourceHandle": "{œdataTypeœ:œContentInputœ,œidœ:œContentInput-ez3tgœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "OnlyofficeDocspaceUploadFile-qpWMI",
        "targetHandle": "{œfieldNameœ:œcontentœ,œidœ:œOnlyofficeDocspaceUploadFile-qpWMIœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      },
      {
        "animated": false,
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "CombineText",
            "id": "CombineText-FlBaW",
            "name": "combined_text",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "filename",
            "id": "OnlyofficeDocspaceUploadFile-qpWMI",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "xy-edge__CombineText-FlBaW{œdataTypeœ:œCombineTextœ,œidœ:œCombineText-FlBaWœ,œnameœ:œcombined_textœ,œoutput_typesœ:[œMessageœ]}-OnlyofficeDocspaceUploadFile-qpWMI{œfieldNameœ:œfilenameœ,œidœ:œOnlyofficeDocspaceUploadFile-qpWMIœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "selected": false,
        "source": "CombineText-FlBaW",
        "sourceHandle": "{œdataTypeœ:œCombineTextœ,œidœ:œCombineText-FlBaWœ,œnameœ:œcombined_textœ,œoutput_typesœ:[œMessageœ]}",
        "target": "OnlyofficeDocspaceUploadFile-qpWMI",
        "targetHandle": "{œfieldNameœ:œfilenameœ,œidœ:œOnlyofficeDocspaceUploadFile-qpWMIœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      },
      {
        "animated": false,
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "TitleInput",
            "id": "TitleInput-mA4ap",
            "name": "text",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "text1",
            "id": "CombineText-FlBaW",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "xy-edge__TitleInput-mA4ap{œdataTypeœ:œTitleInputœ,œidœ:œTitleInput-mA4apœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-CombineText-FlBaW{œfieldNameœ:œtext1œ,œidœ:œCombineText-FlBaWœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "selected": false,
        "source": "TitleInput-mA4ap",
        "sourceHandle": "{œdataTypeœ:œTitleInputœ,œidœ:œTitleInput-mA4apœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "CombineText-FlBaW",
        "targetHandle": "{œfieldNameœ:œtext1œ,œidœ:œCombineText-FlBaWœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      },
      {
        "animated": false,
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "FolderIDInput",
            "id": "FolderIDInput-g3C8Z",
            "name": "text",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "folder_id",
            "id": "OnlyofficeDocspaceUploadFile-qpWMI",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "xy-edge__FolderIDInput-g3C8Z{œdataTypeœ:œFolderIDInputœ,œidœ:œFolderIDInput-g3C8Zœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-OnlyofficeDocspaceUploadFile-qpWMI{œfieldNameœ:œfolder_idœ,œidœ:œOnlyofficeDocspaceUploadFile-qpWMIœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "selected": false,
        "source": "FolderIDInput-g3C8Z",
        "sourceHandle": "{œdataTypeœ:œFolderIDInputœ,œidœ:œFolderIDInput-g3C8Zœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "OnlyofficeDocspaceUploadFile-qpWMI",
        "targetHandle": "{œfieldNameœ:œfolder_idœ,œidœ:œOnlyofficeDocspaceUploadFile-qpWMIœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      }
    ],
    "nodes": [
      {
        "data": {
          "id": "OnlyofficeDocspaceUploadFile-qpWMI",
          "node": {
            "base_classes": [
              "Data"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Upload a file to ONLYOFFICE DocSpace.",
            "display_name": "Upload File",
            "documentation": "",
            "edited": false,
            "field_order": [
              "auth_text",
              "folder_id",
              "filename",
              "content"
            ],
            "frozen": false,
            "icon": "onlyoffice",
            "legacy": false,
            "lf_version": "1.3.4",
            "metadata": {},
            "minimized": false,
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Data",
                "method": "build_data",
                "name": "api_build_data",
                "selected": "Data",
                "tool_mode": true,
                "types": [
                  "Data"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "auth_text": {
                "_input_type": "AuthTextInput",
                "advanced": true,
                "display_name": "Text from Basic Authentication",
                "dynamic": false,
                "info": "Text output from the Basic Authentication component.",
                "input_types": [],
                "load_from_db": false,
                "name": "auth_text",
                "password": true,
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "type": "str",
                "value": ""
              },
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "import math\nfrom datetime import datetime, timezone\nfrom typing import Any\n\nfrom langflow.base.onlyoffice.docspace import (\n    AuthTextInput,\n    Component,\n    CreateSessionOptions,\n    DataOutput,\n    ErrorResponse,\n    FolderIdInput,\n    UploadChunkOptions,\n)\nfrom langflow.inputs import MessageTextInput\nfrom langflow.schema import Data\n\nMAX_CHUNK_SIZE = 1024 * 1024 * 10 # 10mb\n\n\nclass OnlyofficeDocspaceUploadFile(Component):\n    display_name = \"Upload File\"\n    description = \"Upload a file to ONLYOFFICE DocSpace.\"\n    name = \"OnlyofficeDocspaceUploadFile\"\n\n\n    inputs = [\n        AuthTextInput(),\n        FolderIdInput(info=\"The ID of the folder to upload the file to.\"),\n        MessageTextInput(\n            name=\"filename\",\n            display_name=\"Filename\",\n            info=\"The name of the file to upload.\",\n        ),\n        MessageTextInput(\n            name=\"content\",\n            display_name=\"Content\",\n            info=\"The content of the file to upload.\",\n        ),\n    ]\n\n\n    outputs = [\n        DataOutput(),\n    ]\n\n\n    async def build_data(self) -> Data:\n        data = await self._upload_file()\n        return Data(data=data)\n\n\n    async def _upload_file(self) -> Any:\n        client = await self._get_client()\n\n        filesize = len(self.content)\n        create_on = datetime.now(timezone.utc).isoformat()\n\n        session_options = CreateSessionOptions(\n            folderId=self.folder_id,\n            FileName=self.filename,\n            FileSize=filesize,\n            CreateOn=create_on,\n        )\n\n        session_result, response = client.files.create_session(self.folder_id, session_options)\n        if isinstance(response, ErrorResponse):\n            raise response.exception\n\n        chunks = math.ceil(filesize / MAX_CHUNK_SIZE)\n\n        for index in range(chunks):\n            session_id = session_result[\"data\"][\"id\"]\n            start = index * MAX_CHUNK_SIZE\n            end = (index + 1) * MAX_CHUNK_SIZE\n            chunk = self.content[start:end].encode(\"utf-8\")\n\n            upload_options = UploadChunkOptions(\n                filename=self.filename,\n                chunk=chunk,\n            )\n\n            upload_result, response = client.files.upload_chunk(session_id, upload_options)\n            if isinstance(response, ErrorResponse):\n                raise response.exception\n\n        return upload_result\n"
              },
              "content": {
                "_input_type": "MessageTextInput",
                "advanced": false,
                "display_name": "Content",
                "dynamic": false,
                "info": "The content of the file to upload.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "name": "content",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "filename": {
                "_input_type": "MessageTextInput",
                "advanced": false,
                "display_name": "Filename",
                "dynamic": false,
                "info": "The name of the file to upload.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "name": "filename",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "folder_id": {
                "_input_type": "FolderIdInput",
                "advanced": false,
                "display_name": "Folder ID",
                "dynamic": false,
                "info": "The ID of the folder to upload the file to.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "name": "folder_id",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              }
            },
            "tool_mode": false
          },
          "showNode": true,
          "type": "OnlyofficeDocspaceUploadFile"
        },
        "dragging": false,
        "id": "OnlyofficeDocspaceUploadFile-qpWMI",
        "measured": {
          "height": 395,
          "width": 320
        },
        "position": {
          "x": 626.3733906873215,
          "y": 360.16037037303397
        },
        "selected": true,
        "type": "genericNode"
      },
      {
        "data": {
          "id": "ContentInput-ez3tg",
          "node": {
            "base_classes": [
              "Message"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Accept content for new file",
            "display_name": "Message Input",
            "documentation": "",
            "edited": true,
            "field_order": [
              "input_value"
            ],
            "frozen": false,
            "icon": "type",
            "legacy": false,
            "lf_version": "1.3.4",
            "metadata": {},
            "minimized": false,
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Message",
                "hidden": false,
                "method": "text_response",
                "name": "text",
                "options": null,
                "required_inputs": null,
                "selected": "Message",
                "tool_mode": true,
                "types": [
                  "Message"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from langflow.base.io.text import TextComponent\nfrom langflow.io import MultilineInput, Output\nfrom langflow.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Message Input\"\n    description = \"Accept content for new file\"\n    icon = \"type\"\n    name = \"ContentInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        return Message(\n            text=self.input_value,\n        )\n"
              },
              "input_value": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "copy_field": false,
                "display_name": "Text",
                "dynamic": false,
                "info": "Text to be passed as input.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "multiline": true,
                "name": "input_value",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "I don't know the answer. But I think, based on the document, the focus is on AI models and their compliance with requests in different languages, particularly Chinese and English. However, there is no specific information or context provided in the document to write JavaScript code for a simple calculator. If you have a specific task or functionality in mind for the JavaScript code, please provide more details."
              }
            },
            "tool_mode": false
          },
          "showNode": true,
          "type": "ContentInput"
        },
        "dragging": false,
        "id": "ContentInput-ez3tg",
        "measured": {
          "height": 230,
          "width": 320
        },
        "position": {
          "x": -57.91080094464046,
          "y": 729.5818221045855
        },
        "selected": false,
        "type": "genericNode"
      },
      {
        "data": {
          "id": "FolderIDInput-g3C8Z",
          "node": {
            "base_classes": [
              "Message"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Accept parent folder ID for new file",
            "display_name": "Folder ID Input",
            "documentation": "",
            "edited": true,
            "field_order": [
              "input_value"
            ],
            "frozen": false,
            "icon": "type",
            "legacy": false,
            "lf_version": "1.3.4",
            "metadata": {},
            "minimized": false,
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Message",
                "hidden": false,
                "method": "text_response",
                "name": "text",
                "options": null,
                "required_inputs": null,
                "selected": "Message",
                "tool_mode": true,
                "types": [
                  "Message"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from langflow.base.io.text import TextComponent\nfrom langflow.io import MultilineInput, Output\nfrom langflow.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Folder ID Input\"\n    description = \"Accept parent folder ID for new file\"\n    icon = \"type\"\n    name = \"FolderIDInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        return Message(\n            text=self.input_value,\n        )\n"
              },
              "input_value": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "copy_field": false,
                "display_name": "Text",
                "dynamic": false,
                "info": "Text to be passed as input.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "multiline": true,
                "name": "input_value",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "6"
              }
            },
            "tool_mode": false
          },
          "showNode": true,
          "type": "FolderIDInput"
        },
        "dragging": false,
        "id": "FolderIDInput-g3C8Z",
        "measured": {
          "height": 230,
          "width": 320
        },
        "position": {
          "x": -457.2122170622254,
          "y": -48.81447527428571
        },
        "selected": false,
        "type": "genericNode"
      },
      {
        "data": {
          "id": "CombineText-FlBaW",
          "node": {
            "base_classes": [
              "Message"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Concatenate two text sources into a single text chunk using a specified delimiter.",
            "display_name": "Combine Text",
            "documentation": "",
            "edited": false,
            "field_order": [
              "text1",
              "text2",
              "delimiter"
            ],
            "frozen": false,
            "icon": "merge",
            "legacy": true,
            "lf_version": "1.3.4",
            "metadata": {},
            "minimized": false,
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Combined Text",
                "method": "combine_texts",
                "name": "combined_text",
                "selected": "Message",
                "tool_mode": true,
                "types": [
                  "Message"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from langflow.custom import Component\nfrom langflow.io import MessageTextInput, Output\nfrom langflow.schema.message import Message\n\n\nclass CombineTextComponent(Component):\n    display_name = \"Combine Text\"\n    description = \"Concatenate two text sources into a single text chunk using a specified delimiter.\"\n    icon = \"merge\"\n    name = \"CombineText\"\n    legacy: bool = True\n\n    inputs = [\n        MessageTextInput(\n            name=\"text1\",\n            display_name=\"First Text\",\n            info=\"The first text input to concatenate.\",\n        ),\n        MessageTextInput(\n            name=\"text2\",\n            display_name=\"Second Text\",\n            info=\"The second text input to concatenate.\",\n        ),\n        MessageTextInput(\n            name=\"delimiter\",\n            display_name=\"Delimiter\",\n            info=\"A string used to separate the two text inputs. Defaults to a whitespace.\",\n            value=\" \",\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Combined Text\", name=\"combined_text\", method=\"combine_texts\"),\n    ]\n\n    def combine_texts(self) -> Message:\n        combined = self.delimiter.join([self.text1, self.text2])\n        self.status = combined\n        return Message(text=combined)\n"
              },
              "delimiter": {
                "_input_type": "MessageTextInput",
                "advanced": false,
                "display_name": "Delimiter",
                "dynamic": false,
                "info": "A string used to separate the two text inputs. Defaults to a whitespace.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "name": "delimiter",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": " ."
              },
              "text1": {
                "_input_type": "MessageTextInput",
                "advanced": false,
                "display_name": "First Text",
                "dynamic": false,
                "info": "The first text input to concatenate.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "name": "text1",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "text2": {
                "_input_type": "MessageTextInput",
                "advanced": false,
                "display_name": "Second Text",
                "dynamic": false,
                "info": "The second text input to concatenate.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "name": "text2",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "txt"
              }
            },
            "tool_mode": false
          },
          "showNode": true,
          "type": "CombineText"
        },
        "dragging": false,
        "id": "CombineText-FlBaW",
        "measured": {
          "height": 415,
          "width": 320
        },
        "position": {
          "x": -54.69368355936021,
          "y": 275.3499708670854
        },
        "selected": false,
        "type": "genericNode"
      },
      {
        "data": {
          "id": "TitleInput-mA4ap",
          "node": {
            "base_classes": [
              "Message"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Accept title for new file.",
            "display_name": "Title Input",
            "documentation": "",
            "edited": true,
            "field_order": [
              "input_value"
            ],
            "frozen": false,
            "icon": "type",
            "legacy": false,
            "lf_version": "1.3.4",
            "metadata": {},
            "minimized": false,
            "output_types": [],
            "outputs": [
              {
                "allows_loop": false,
                "cache": true,
                "display_name": "Message",
                "hidden": false,
                "method": "text_response",
                "name": "text",
                "options": null,
                "required_inputs": null,
                "selected": "Message",
                "tool_mode": true,
                "types": [
                  "Message"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from langflow.base.io.text import TextComponent\nfrom langflow.io import MultilineInput, Output\nfrom langflow.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Title Input\"\n    description = \"Accept title for new file.\"\n    icon = \"type\"\n    name = \"TitleInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        return Message(\n            text=self.input_value,\n        )\n"
              },
              "input_value": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "copy_field": false,
                "display_name": "Text",
                "dynamic": false,
                "info": "Text to be passed as input.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "list_add_label": "Add More",
                "load_from_db": false,
                "multiline": true,
                "name": "input_value",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "I don't know the ans"
              }
            },
            "tool_mode": false
          },
          "showNode": true,
          "type": "TitleInput"
        },
        "dragging": false,
        "id": "TitleInput-mA4ap",
        "measured": {
          "height": 230,
          "width": 320
        },
        "position": {
          "x": -445.14728333686253,
          "y": 315.5437237853577
        },
        "selected": false,
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 234.10102387741682,
      "y": 161.18414244733344,
      "zoom": 0.6966256685941623
    }
  },
  "description": "Save message to new file at selected folder",
  "endpoint_name": null,
  "id": "a3657447-08a0-4b8f-89ec-bdd56ec74968",
  "is_component": false,
  "last_tested_version": "1.3.4",
  "name": "save_message_to_file",
  "tags": []
}